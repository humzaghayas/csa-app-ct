name: B2B MS Gateway CI/CD release (master) flow
on:
  repository_dispatch:
    types: ms-gateway
  push:
    branches:
      - master
    paths:
      - 'packages/b2b-ms-gateway/**'
      - '.github/workflows/ms-gateway-ci-master.yaml'
      - '*.json'
env:
    GCP_SDK_VERSION: '276.0.0'
    GITHUB_SHA: ${{ github.sha }}
    IMAGE: commercetools-ms-gateway
    GC_PROJECT_ID: ${{ secrets.GC_PROJECT_ID }}
    EMPLOYEE_MS_URL: https://ms-employee-${{ secrets.MS_DOMAIN }}/employees
    QUOTE_MS_URL: https://ms-quote-${{ secrets.MS_DOMAIN }}/quotes    
jobs:
  lint:
    name: Lint (node.js, dockerfile, markdown)
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [10.x]
    steps:

    - uses: actions/checkout@v1

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        cd packages/b2b-ms-gateway
        npm install --no-audit

    - name: Lint Node.js
      run: |
        cd packages/b2b-ms-gateway
        npm run lint

  #  - name: Lint Markdown
  #    run: |
  #      cd packages/b2b-ms-gateway
  #      npm run lint-md

    - name: Lint Dockerfile
      run: |
        cd packages/b2b-ms-gateway
        docker run -i hadolint/hadolint:v1.17.3 < Dockerfile

  build:
    name: Build (node.js)
    needs: lint
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [10.x]
    steps:

      - uses: actions/checkout@v1

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
     
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Build the Docker image
      - name: Build with Docker
        run: |
          cd packages/b2b-ms-gateway
          docker build -t gcr.io/"$GC_PROJECT_ID"/"$IMAGE":"$GITHUB_SHA" \
            --build-arg PORT=8080 .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push gcr.io/$GC_PROJECT_ID/$IMAGE:$GITHUB_SHA

  test:
    name: Test
    needs: build
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [10.x]
    steps:

      - id: auth
        uses: google-github-actions/auth@v0
        with:
         credentials_json: ${{ secrets.GCP_CREDENTIALS }}
     
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      - name: Unit Testing
        run: |
          docker run --rm --user=root --entrypoint="/bin/bash"                  \
          -t gcr.io/"$GC_PROJECT_ID"/"$IMAGE":"$GITHUB_SHA"                     \
          -c "NODE_ENV=development; cd /opt/node_app/app; git config --global http.sslVerify false; npm install; npm test"

    #  - name: Audit for security vulnerabilities
    #    run: |
    #      docker run --rm --user=root --entrypoint="/bin/bash"                  \
    #      -t gcr.io/"$GC_PROJECT_ID"/"$IMAGE":"$GITHUB_SHA"                     \
    #      -c "NODE_ENV=development; cd /opt/node_app/app; git config --global http.sslVerify false; npm install; npm audit  --production"
  
  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [10.x]
    steps:

      - uses: actions/checkout@v1

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
     
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Deploy to Cloud Run
        run: |
          # Interpolate environment variables
          cd packages/b2b-ms-gateway
          gcloud config set project $GC_PROJECT_ID
          gcloud run deploy ms-gateway --platform=managed --region=us-east1 --allow-unauthenticated   \
          --image=gcr.io/"$GC_PROJECT_ID"/"$IMAGE":"$GITHUB_SHA"                                      \
          --set-env-vars=HOST="0.0.0.0",GC_PROJECT_ID=$GC_PROJECT_ID,EMPLOYEE_MS_URL=$EMPLOYEE_MS_URL,QUOTE_MS_URL=$QUOTE_MS_URL