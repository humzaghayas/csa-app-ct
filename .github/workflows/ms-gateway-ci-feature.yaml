name: B2B MS Gateway CI/CD feature (feature/**) flow
on:
  push:
    branches:
      - feature/**
    paths:
      - 'packages/b2b-ms-gateway/**'
      - '.github/workflows/ms-gateway-ci-feature.yaml'
      - '*.json'
env:
    GCP_SDK_VERSION: '276.0.0'
    GITHUB_SHA: ${{ github.sha }}
    IMAGE: commercetools-ms-gateway
    GC_PROJECT_ID: ${{ secrets.GC_PROJECT_ID }}
    EMPLOYEE_MS_URL: https://ms-employee-${{ secrets.MS_DOMAIN }}/employees
    QUOTE_MS_URL: https://ms-quote-${{ secrets.MS_DOMAIN }}/quotes
jobs:
  lint:
    name: Lint (node.js, dockerfile, markdown)
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [10.x]
    steps:

    - uses: actions/checkout@v1

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        cd packages/b2b-ms-gateway
        npm install --no-audit

    - name: Lint Node.js
      run: |
        cd packages/b2b-ms-gateway
        npm run lint

    - name: Lint Markdown
      run: |
        cd packages/b2b-ms-gateway
        npm run lint-md

    - name: Lint Dockerfile
      run: |
        cd packages/b2b-ms-gateway
        docker run -i hadolint/hadolint:v1.17.3 < Dockerfile

  build:
    name: Build (node.js)
    needs: lint
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [10.x]
    steps:

      - uses: actions/checkout@v1

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.0
        with:
          version: $GCP_SDK_Version
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Build the Docker image
      - name: Build with Docker
        run: |
          cd packages/b2b-ms-gateway
          docker build -t gcr.io/"$GC_PROJECT_ID"/"$IMAGE":"$GITHUB_SHA" \
            --build-arg PORT=8080 .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push gcr.io/$GC_PROJECT_ID/$IMAGE:$GITHUB_SHA

  test:
    name: Test
    needs: build
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [10.x]
    steps:

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.0
        with:
          version: $GCP_SDK_Version
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      - name: Unit Testing
        run: |
          docker run --rm --user=root --entrypoint="/bin/bash"                  \
          -t gcr.io/"$GC_PROJECT_ID"/"$IMAGE":"$GITHUB_SHA"                     \
          -c "NODE_ENV=development; cd /opt/node_app/app; git config --global http.sslVerify false; npm install; npm test"

      - name: Audit for security vulnerabilities
        run: |
          docker run --rm --user=root --entrypoint="/bin/bash"                  \
          -t gcr.io/"$GC_PROJECT_ID"/"$IMAGE":"$GITHUB_SHA"                     \
          -c "NODE_ENV=development; cd /opt/node_app/app; git config --global http.sslVerify false; npm install; npm audit  --production"